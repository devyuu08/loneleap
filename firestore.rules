rules_version = "2";
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/admin/$(request.auth.token.email));
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /admin/{email} {
      allow read, write: if false;
    }

    match /itineraries/{itineraryId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.createdBy.uid == request.auth.uid;
    }

    match /reviews/{reviewId} {
      allow read: if true;

      // 리뷰 생성자만 수정/삭제 가능
      allow update, delete: if isSignedIn() && isOwner(resource.data.createdBy.uid);

      // likesCount만 바꾸는 경우 → 누구나 가능
      allow update: if isSignedIn() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likesCount']);

      allow create: if isSignedIn();

      // 하위 컬렉션: comments
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if isSignedIn() && isOwner(resource.data.author.uid);
      }

      // 하위 컬렉션: likes
      match /likes/{userId} {
        allow read, write: if isSignedIn();
      }
    }

    match /users_public/{userId} {
      allow read: if true;

      allow update: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && isOwner(userId);
    }

    match /users_private/{userId} {
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());

      allow update: if isSignedIn() && (
        isOwner(userId) || isAdmin() ||

        // 신고 횟수 +1만 허용
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reportedCount']) &&
          request.resource.data.reportedCount == resource.data.reportedCount + 1
        ) ||

        // 일정 수 +1 또는 -1만 허용
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['itineraryCount']) &&
          (
            request.resource.data.itineraryCount == resource.data.itineraryCount + 1 ||
            request.resource.data.itineraryCount == resource.data.itineraryCount - 1
          )
        ) ||

        // 리뷰 수 +1 또는 -1만 허용
        (
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reviewCount']) &&
          (
            request.resource.data.reviewCount == resource.data.reviewCount + 1 ||
            request.resource.data.reviewCount == resource.data.reviewCount - 1
        )
        )
      );

      allow create: if isSignedIn();
    }

    match /chatRooms/{roomId} {
      allow read: if isSignedIn();

      // write 시점에 문서가 없는 경우도 감안
      allow write: if isSignedIn();

      // 기존 문서 기준 update 제한
      allow update, delete: if isSignedIn() && request.auth.uid in resource.data.participants;

      allow create: if isSignedIn();
    }

    match /chatMessages/{messageId} {
      allow read: if isSignedIn();

      allow create: if isSignedIn() && (
        // 일반 메시지
        ((request.resource.data.type == null || request.resource.data.type == "text") &&
      request.resource.data.senderId == request.auth.uid)

        // 시스템 메시지
        || (
          request.resource.data.type == "system" &&
          request.resource.data.systemType in ["join", "leave", "date"] &&
          request.resource.data.userId == request.auth.uid
        )
      );
    }

    match /review_reports/{reportId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.reporterId;
      allow read, delete: if isAdmin();

      match /{sub=**} {
        allow read, write: if isSignedIn();
        allow read, delete: if isAdmin();
      }
    }

    match /chatReports/{reportId} {
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.reporterId;
      allow read, delete: if isAdmin();

      match /{sub=**} {
        allow read, write: if isSignedIn();
        allow read, delete: if isAdmin();
      }
    }

    match /recommended_places/{docId} {
      allow read: if true;
      allow write, create: if isSignedIn() && isAdmin();
    }

    // 나머지 모든 문서는 차단
    match /{document=**} {
      allow read, write: if false;
    }
  }
}